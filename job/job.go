package job

type Job struct {
	Name    string      `json:"name"`
	State   *JobState   `json:"state"`
	Payload *JobPayload `json:"payload"` //Can be active, unknown
}

// JobPayload should be specific to the type of target it is
// running on. Currently, coreinit only supports the 'systemd' type
type JobPayload struct {
	Type  string `json:"type"`
	Value string `json:"value"`
}

func NewJob(name string, state *JobState, payload *JobPayload) *Job {
	return &Job{name, state, payload}
}

func NewJobPayload(value string) *JobPayload {
	return &JobPayload{"systemd", value}
}

// JobState should be generated by the target that is actually running
// the job. This will be extended with other data in the future (i.e. ports,
// memory usage, etc).
type JobState struct {
	State string `json:"state"`
}

func NewJobState(state string) *JobState {
	return &JobState{state}
}
